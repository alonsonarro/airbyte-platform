plugins {
    id 'application'
}

configurations.all {
    // Temporary hack to avoid dependency conflicts
    exclude group: 'io.micronaut.aws'
    exclude group: 'io.micronaut.azure'
    exclude group: 'io.micronaut.cache'
    exclude group: 'io.micronaut.coherence'
    exclude group: 'io.micronaut.data'
    exclude group: 'io.micronaut.email'
    exclude group: 'io.micronaut.flyway'
    exclude group: 'io.micronaut.gcp'
    exclude group: 'io.micronaut.groovy'
    exclude group: 'io.micronaut.grpc'
    exclude group: 'io.micronaut.kafka'
    exclude group: 'io.micronaut.kotlin'
    exclude group: 'io.micronaut.kubernetes'
    exclude group: 'io.micronaut.liquibase'
    exclude group: 'io.micronaut.jaxrs'
    exclude group: 'io.micronaut.micrometer'
    exclude group: 'io.micronaut.microstream'
    exclude group: 'io.micronaut.mongodb'
    exclude group: 'io.micronaut.mqtt'
    exclude group: 'io.micronaut.openapi'
    exclude group: 'io.micronaut.oraclecloud'
    exclude group: 'io.micronaut.picocli'
    exclude group: 'io.micronaut.problem'
    exclude group: 'io.micronaut.r2dbc'
    exclude group: 'io.micronaut.reactor'
    exclude group: 'io.micronaut.redis'
    exclude group: 'io.micronaut.rxjava2'
    exclude group: 'io.micronaut.rxjava3'
    exclude group: 'io.micronaut.security'
    exclude group: 'io.micronaut.serde'
    exclude group: 'io.micronaut.servlet'
    exclude group: 'io.micronaut.spring'
    exclude group: 'io.micronaut.sql'
    exclude group: 'io.micronaut.test'
    exclude group: 'io.micronaut.testresources'
    exclude group: 'io.micronaut.tracing'
    exclude group: 'io.micronaut.views'
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation project(':cloud-partner-api')
    implementation project(':cloud-auth')
    implementation project(':cloud-config:cloud-config-core')
    implementation project(':cloud-config:cloud-config-models')
    implementation project(':cloud-config:cloud-config-persistence')
    implementation project(':cloud-db:lib')

    implementation libs.flyway.core
    implementation "io.airbyte:airbyte-api"
    implementation "io.airbyte:airbyte-commons"
    implementation "io.airbyte:airbyte-json-validation"
    implementation "io.airbyte.airbyte-db:db-lib"
    implementation "io.airbyte.airbyte-config:config-persistence"
    implementation "io.airbyte.airbyte-config:config-models"
    implementation "io.airbyte:airbyte-commons-server"

    implementation 'commons-cli:commons-cli:1.4'
    implementation 'com.github.slugify:slugify:2.4'
    implementation 'org.apache.cxf:cxf-core:3.4.2'
    implementation 'org.eclipse.jetty:jetty-server:9.4.31.v20200723'
    implementation 'org.eclipse.jetty:jetty-servlet:9.4.31.v20200723'
    implementation 'org.glassfish.jaxb:jaxb-runtime:3.0.2'
    implementation 'org.glassfish.jersey.containers:jersey-container-servlet'
    implementation 'org.glassfish.jersey.inject:jersey-hk2'
    implementation 'org.glassfish.jersey.media:jersey-media-json-jackson'
    implementation 'org.glassfish.jersey.ext:jersey-bean-validation'

    testImplementation 'com.squareup.okhttp3:mockwebserver:4.9.1'
    testImplementation "org.postgresql:postgresql:42.2.18"
    testImplementation "org.testcontainers:postgresql:1.15.1"

    // This should be available transitively from airbyte-config, but our hack to exclude micronaut bundles
    // is also excluding this necessary dependency. So for now, declare it explicitly.
    // see https://github.com/airbytehq/airbyte/pull/17269 for some additional context
    implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'
    implementation(libs.flyway.core) {
        force = true
    }
    implementation(libs.s3) {
        // Force to avoid updated version brought in transitively from Micronaut 3.8+
        // that is incompatible with our current Helm setup
        force = true
    }
    implementation(libs.aws.java.sdk.s3) {
        // Force to avoid updated version brought in transitively from Micronaut 3.8+
        // that is incompatible with our current Helm setup
        force = true
    }
}

application {
    mainClass = 'io.airbyte.cloud.partner.server.CloudPartnerServerApp'
}

tasks.named("buildDockerImage") {
    dependsOn copyGeneratedTar
}
